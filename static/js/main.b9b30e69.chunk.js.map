{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"+QAIMA,E,qLACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC9B,yBAAKF,UAAU,yBACb,4BACEA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFvC,WAQF,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAOrC,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GArB3BC,aA6BRC,eAJS,SAAAC,GACtB,MAAO,CAAEX,MAAOW,EAAMX,SAGgB,CAAEO,WChChB,SAAAL,GAExB,MAAO,CACLU,KAAM,gBACNC,QAASX,KD4BEQ,CAAyCb,GEVzCa,eAJS,SAAAC,GACtB,MAAO,CAAET,KAAMS,EAAMG,gBAGRJ,EApBI,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACpB,OAAKA,EAIH,6BACE,6CACA,2BACGA,EAAKG,MACN,6BACCH,EAAKa,WARH,iDCcIC,EAfH,WACV,OACE,yBAAKb,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,UCMKc,cAAgB,CAC7BjB,MAjBmB,WACnB,MAAO,CACL,CAAEK,MAAO,eAAgBU,SAAU,QACnC,CAAEV,MAAO,sBAAuBU,SAAU,QAC1C,CAAEV,MAAO,OAAQU,SAAU,QAC3B,CAAEV,MAAO,wCAAyCU,SAAU,UAa9DD,aAT0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAETC,KCRTK,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.b9b30e69.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from \"../actions\";\r\n\r\nclass SongList extends Component {\r\n  renderList() {\r\n    return this.props.songs.map(song => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n            <button\r\n              className=\"ui button primary\"\r\n              onClick={() => this.props.selectSong(song)}\r\n            >\r\n              Select\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"content\">{song.title}</div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { songs: state.songs };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);\r\n","//Action creator\r\nexport const selectSong = song => {\r\n  // return an action\r\n  return {\r\n    type: \"SONG_SELECTED\", // type always required\r\n    payload: song // we want to specify which song we are trying to select\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SongDetail = ({ song }) => {\r\n  if (!song) {\r\n    return <div>Select a song</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h3>Details for: </h3>\r\n      <p>\r\n        {song.title}\r\n        <br />\r\n        {song.duration}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { song: state.selectedSong };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from \"react\";\r\nimport SongList from \"./SongList\";\r\nimport SongDetail from \"./SongDetail\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container grid\">\r\n      <div className=\"ui row\">\r\n        <div className=\"column eight wide\">\r\n          <SongList />\r\n        </div>\r\n        <div className=\"column eight wide\">\r\n          <SongDetail />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst songsReducer = () => {\r\n  return [\r\n    { title: \"Life on Mars\", duration: \"4:10\" },\r\n    { title: \"Message in a bottle\", duration: \"4:51\" },\r\n    { title: \"Kids\", duration: \"5:02\" },\r\n    { title: \"Sgt. Pepper's Lonely Hearts Club Band\", duration: \"2:02\" }\r\n  ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n  if (action.type === \"SONG_SELECTED\") {\r\n    return action.payload;\r\n  }\r\n  return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n  songs: songsReducer,\r\n  selectedSong: selectedSongReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}